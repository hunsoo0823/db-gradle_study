plugins {
  id 'java'

  id 'org.springframework.boot' version '2.3.3.RELEASE'
  id 'io.spring.dependency-management' version '1.0.10.RELEASE'
}

// $ gradle bootRun -Pargs=firstArg
// $ gradle bootRun -Pargs=firstArg,secondArg
bootRun {
  if (project.hasProperty('args')) {
    args project.args.split(',')
  }
}

clean {
  delete "bin"
}

repositories {
  jcenter()
}

dependencies {
  // Lombok
  annotationProcessor 'org.projectlombok:lombok'
  compileOnly         'org.projectlombok:lombok'

  // Springboot
  implementation      'org.springframework.boot:spring-boot-starter-data-jpa'
  testImplementation  'org.springframework.boot:spring-boot-starter-test'

  // JDBC Driver
  runtimeOnly         'com.h2database:h2'
}

test {
  useJUnitPlatform()

  outputs.upToDateWhen {false}
  testLogging {
    events = ['passed', 'skipped', 'failed']
    showStandardStreams = true
    exceptionFormat = 'full'
  }
}

allprojects {
  task ctest(dependsOn: classes, type: JavaExec) {
    group = 'Application'
    description = 'Runs CreateTest'

    main = 'com.oreilly.hh.TestRunner'
    args 'createTest'
    classpath = sourceSets.main.runtimeClasspath
  }

  task qtest(dependsOn: classes, type: JavaExec) {
    group = 'Application'
    description = 'Runs QueryTest'

    main = 'com.oreilly.hh.TestRunner'
    args 'queryTest'
    classpath = sourceSets.main.runtimeClasspath
  }

  task atest(dependsOn: classes, type: JavaExec) {
    group = 'Application'
    description = 'Runs AlbumTest'

    main = 'com.oreilly.hh.TestRunner'
    args 'albumTest'
    classpath = sourceSets.main.runtimeClasspath
  }
}

